%!PS-Adobe-3.0 EPSF-3.0
%%Title: (MATLAB)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 15:20:26 11/17/16
%%For: (user)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 40 60 793 483
%%HiResBoundingBox: 40.2861 59.567 792.864 482.999
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource TimesNewRoman,Bold
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N12/TimesNewRoman,Bold -1 TZ
%%IncludeResource TimesNewRoman,BoldItalic
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N18/TimesNewRoman,BoldItalic -1 TZ
%%IncludeResource TimesNewRoman
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N19/TimesNewRoman -1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3661 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2016-11-17T15:20:26+08:00</xap:CreateDate>
         <xap:ModifyDate>2016-11-17T15:20:26+08:00</xap:ModifyDate>
         <xap:MetadataDate>2016-11-17T15:20:26+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:1971CD4F96ACE611B322F415D3ED6484</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:1971CD4F96ACE611B322F415D3ED6484</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:55256984-3acc-45de-b63d-0f62848e86ed</stRef:instanceID>
            <stRef:documentID>uuid:b61e61ad-c028-4524-a3be-e26ac6e93962</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">MATLAB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>user</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
40.2861 59.567 752.578 423.432 rectclip
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (WKFBAA+NSimSun)
%%Title: (WKFBAA+NSimSun Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /WKFBAA+NSimSun def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /WKFBAA+NSimSun-Identity-H /Identity-H 0 [/WKFBAA+NSimSun] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N17 (WKFBAA+NSimSun-Identity-H)
/N17 (WKFBAA+NSimSun-Identity-H) /Identity-H [ (WKFBAA+NSimSun) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
q
40.2861 59.567 m
792.864 59.567 l
792.864 482.999 l
40.2861 482.999 l
h
W
n
q
n
0.0 54.393 850.98 458.64 re
W
n
n
[/DeviceGray] cs 1.0 sc
0.000000 54.393002 850.979980 458.640015 rectfill

Q
n
[/DeviceGray] cs 1.0 sc
94.800003 104.852997 692.640015 373.799988 rectfill

1 j
1.5 w
n
94.8 104.853 m
94.8 478.653 l
787.44 478.653 l
787.44 104.853 l
94.8 104.853 l
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 104.853 m
94.8 478.713 l
0.0 sc
S
n
94.83 478.653 m
94.83 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.83 478.653 m
94.83 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
129.42 104.853 m
129.42 478.713 l
S
n
129.45 478.653 m
129.45 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
129.45 478.653 m
129.45 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
164.04 104.853 m
164.04 478.713 l
S
n
164.07 478.653 m
164.07 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
164.07 478.653 m
164.07 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
198.66 104.853 m
198.66 478.713 l
S
n
198.69 478.653 m
198.69 478.713 l
0.0600128 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
198.69 478.653 m
198.69 478.713 l
0.0600128 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
233.28 104.853 m
233.28 478.713 l
S
n
233.31 478.653 m
233.31 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
233.31 478.653 m
233.31 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
267.96 104.853 m
267.96 478.713 l
S
n
267.99 478.653 m
267.99 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
267.99 478.653 m
267.99 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
302.58 104.853 m
302.58 478.713 l
S
n
302.61 478.653 m
302.61 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
302.61 478.653 m
302.61 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
337.2 104.853 m
337.2 478.713 l
S
n
337.23 478.653 m
337.23 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
337.23 478.653 m
337.23 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
371.82 104.853 m
371.82 478.713 l
S
n
371.85 478.653 m
371.85 478.713 l
0.0600281 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
371.85 478.653 m
371.85 478.713 l
0.0600281 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
406.44 104.853 m
406.44 478.713 l
S
n
406.47 478.653 m
406.47 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
406.47 478.653 m
406.47 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
441.12 104.853 m
441.12 478.713 l
S
n
441.15 478.653 m
441.15 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
441.15 478.653 m
441.15 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
475.74 104.853 m
475.74 478.713 l
S
n
475.77 478.653 m
475.77 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
475.77 478.653 m
475.77 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
510.36 104.853 m
510.36 478.713 l
S
n
510.39 478.653 m
510.39 478.713 l
0.0600281 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
510.39 478.653 m
510.39 478.713 l
0.0600281 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
544.98 104.853 m
544.98 478.713 l
S
n
545.01 478.653 m
545.01 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
545.01 478.653 m
545.01 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
579.6 104.853 m
579.6 478.713 l
S
n
579.63 478.653 m
579.63 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
579.63 478.653 m
579.63 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
614.28 104.853 m
614.28 478.713 l
S
n
614.31 478.653 m
614.31 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
614.31 478.653 m
614.31 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
648.9 104.853 m
648.9 478.713 l
S
n
648.93 478.653 m
648.93 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
648.93 478.653 m
648.93 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
683.52 104.853 m
683.52 478.713 l
S
n
683.55 478.653 m
683.55 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
683.55 478.653 m
683.55 478.713 l
0.0599976 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
718.14 104.853 m
718.14 478.713 l
S
n
718.17 478.653 m
718.17 478.713 l
0.0599365 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
718.17 478.653 m
718.17 478.713 l
0.0599365 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
752.76 104.853 m
752.76 478.713 l
S
n
752.79 478.653 m
752.79 478.713 l
0.0599365 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
752.79 478.653 m
752.79 478.713 l
0.0599365 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.44 104.853 m
787.44 478.713 l
S
n
787.47 478.653 m
787.47 478.713 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 478.653 m
787.47 478.713 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 104.853 m
787.44 104.853 l
S
n
787.47 104.793 m
787.47 104.853 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 104.793 m
787.47 104.853 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 162.393 m
787.44 162.393 l
S
n
787.47 162.333 m
787.47 162.393 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 162.333 m
787.47 162.393 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 219.873 m
787.44 219.873 l
S
n
787.47 219.813 m
787.47 219.873 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 219.813 m
787.47 219.873 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 277.413 m
787.44 277.413 l
S
n
787.47 277.353 m
787.47 277.413 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 277.353 m
787.47 277.413 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 334.893 m
787.44 334.893 l
S
n
787.47 334.833 m
787.47 334.893 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 334.833 m
787.47 334.893 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 392.433 m
787.44 392.433 l
S
n
787.47 392.373 m
787.47 392.433 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 392.373 m
787.47 392.433 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
94.8 449.913 m
787.44 449.913 l
S
n
787.47 449.853 m
787.47 449.913 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
n
787.47 449.853 m
787.47 449.913 l
0.0600586 w
[] 0.0 d
S
0.96 w
[0.96 0.96 ] 0.0 d
1.5 w
[] 0.0 d
n
94.8 478.653 m
787.44 478.653 l
S
n
787.47 478.593 m
787.47 478.653 l
0.0600586 w
S
1.5 w
n
94.8 104.853 m
787.44 104.853 l
S
n
787.47 104.793 m
787.47 104.853 l
0.0600586 w
S
1.5 w
n
787.44 104.853 m
787.44 478.653 l
S
n
787.47 478.593 m
787.47 478.653 l
0.0600586 w
S
1.5 w
n
94.8 104.853 m
94.8 478.653 l
S
n
94.83 478.593 m
94.83 478.653 l
0.0599976 w
S
1.5 w
n
94.8 104.853 m
787.44 104.853 l
S
n
787.47 104.793 m
787.47 104.853 l
0.0600586 w
S
1.5 w
n
94.8 104.853 m
94.8 478.653 l
S
n
94.83 478.593 m
94.83 478.653 l
0.0599976 w
S
1.5 w
n
94.8 104.853 m
94.8 111.813 l
S
n
94.83 111.753 m
94.83 111.813 l
0.0599976 w
S
1.5 w
n
94.8 478.713 m
94.8 471.753 l
S
n
94.83 471.693 m
94.83 471.753 l
0.0599976 w
S
1.5 w
91.32 89.2526 m
/N12 13.98 Tf
(0) show
n
129.42 104.853 m
129.42 111.813 l
S
n
129.45 111.753 m
129.45 111.813 l
0.0599976 w
S
1.5 w
n
129.42 478.713 m
129.42 471.753 l
S
n
129.45 471.693 m
129.45 471.753 l
0.0599976 w
S
1.5 w
120.66 89.2526 m
(0.1)
[6.99 3.495 6.99 ] pdfxs
n
164.04 104.853 m
164.04 111.813 l
S
n
164.07 111.753 m
164.07 111.813 l
0.0599976 w
S
1.5 w
n
164.04 478.713 m
164.04 471.753 l
S
n
164.07 471.693 m
164.07 471.753 l
0.0599976 w
S
1.5 w
155.28 89.2526 m
(0.2)
[6.99 3.495 6.99 ] pdfxs
n
198.66 104.853 m
198.66 111.813 l
S
n
198.69 111.753 m
198.69 111.813 l
0.0600128 w
S
1.5 w
n
198.66 478.713 m
198.66 471.753 l
S
n
198.69 471.693 m
198.69 471.753 l
0.0600128 w
S
1.5 w
189.9 89.2526 m
(0.3)
[6.99 3.495 6.99 ] pdfxs
n
233.28 104.853 m
233.28 111.813 l
S
n
233.31 111.753 m
233.31 111.813 l
0.0599976 w
S
1.5 w
n
233.28 478.713 m
233.28 471.753 l
S
n
233.31 471.693 m
233.31 471.753 l
0.0599976 w
S
1.5 w
224.52 89.2526 m
(0.4)
[6.99 3.495 6.99 ] pdfxs
n
267.96 104.853 m
267.96 111.813 l
S
n
267.99 111.753 m
267.99 111.813 l
0.0599976 w
S
1.5 w
n
267.96 478.713 m
267.96 471.753 l
S
n
267.99 471.693 m
267.99 471.753 l
0.0599976 w
S
1.5 w
259.2 89.2526 m
(0.5)
[6.99 3.495 6.99 ] pdfxs
n
302.58 104.853 m
302.58 111.813 l
S
n
302.61 111.753 m
302.61 111.813 l
0.0599976 w
S
1.5 w
n
302.58 478.713 m
302.58 471.753 l
S
n
302.61 471.693 m
302.61 471.753 l
0.0599976 w
S
1.5 w
293.82 89.2526 m
(0.6)
[6.99 3.495 6.99 ] pdfxs
n
337.2 104.853 m
337.2 111.813 l
S
n
337.23 111.753 m
337.23 111.813 l
0.0599976 w
S
1.5 w
n
337.2 478.713 m
337.2 471.753 l
S
n
337.23 471.693 m
337.23 471.753 l
0.0599976 w
S
1.5 w
328.44 89.2526 m
(0.7)
[6.99 3.495 6.99 ] pdfxs
n
371.82 104.853 m
371.82 111.813 l
S
n
371.85 111.753 m
371.85 111.813 l
0.0600281 w
S
1.5 w
n
371.82 478.713 m
371.82 471.753 l
S
n
371.85 471.693 m
371.85 471.753 l
0.0600281 w
S
1.5 w
363.06 89.2526 m
(0.8)
[6.99 3.495 6.99 ] pdfxs
n
406.44 104.853 m
406.44 111.813 l
S
n
406.47 111.753 m
406.47 111.813 l
0.0599976 w
S
1.5 w
n
406.44 478.713 m
406.44 471.753 l
S
n
406.47 471.693 m
406.47 471.753 l
0.0599976 w
S
1.5 w
397.68 89.2526 m
(0.9)
[6.99 3.495 6.99 ] pdfxs
n
441.12 104.853 m
441.12 111.813 l
S
n
441.15 111.753 m
441.15 111.813 l
0.0599976 w
S
1.5 w
n
441.12 478.713 m
441.12 471.753 l
S
n
441.15 471.693 m
441.15 471.753 l
0.0599976 w
S
1.5 w
437.64 89.2526 m
(1) show
n
475.74 104.853 m
475.74 111.813 l
S
n
475.77 111.753 m
475.77 111.813 l
0.0599976 w
S
1.5 w
n
475.74 478.713 m
475.74 471.753 l
S
n
475.77 471.693 m
475.77 471.753 l
0.0599976 w
S
1.5 w
466.98 89.2526 m
(1.1)
[6.99 3.495 6.99 ] pdfxs
n
510.36 104.853 m
510.36 111.813 l
S
n
510.39 111.753 m
510.39 111.813 l
0.0600281 w
S
1.5 w
n
510.36 478.713 m
510.36 471.753 l
S
n
510.39 471.693 m
510.39 471.753 l
0.0600281 w
S
1.5 w
501.6 89.2526 m
(1.2)
[6.99 3.495 6.99 ] pdfxs
n
544.98 104.853 m
544.98 111.813 l
S
n
545.01 111.753 m
545.01 111.813 l
0.0599976 w
S
1.5 w
n
544.98 478.713 m
544.98 471.753 l
S
n
545.01 471.693 m
545.01 471.753 l
0.0599976 w
S
1.5 w
536.22 89.2526 m
(1.3)
[6.99 3.495 6.99 ] pdfxs
n
579.6 104.853 m
579.6 111.813 l
S
n
579.63 111.753 m
579.63 111.813 l
0.0599976 w
S
1.5 w
n
579.6 478.713 m
579.6 471.753 l
S
n
579.63 471.693 m
579.63 471.753 l
0.0599976 w
S
1.5 w
570.84 89.2526 m
(1.4)
[6.99 3.495 6.99 ] pdfxs
n
614.28 104.853 m
614.28 111.813 l
S
n
614.31 111.753 m
614.31 111.813 l
0.0599976 w
S
1.5 w
n
614.28 478.713 m
614.28 471.753 l
S
n
614.31 471.693 m
614.31 471.753 l
0.0599976 w
S
1.5 w
605.52 89.2526 m
(1.5)
[6.99 3.495 6.99 ] pdfxs
n
648.9 104.853 m
648.9 111.813 l
S
n
648.93 111.753 m
648.93 111.813 l
0.0599976 w
S
1.5 w
n
648.9 478.713 m
648.9 471.753 l
S
n
648.93 471.693 m
648.93 471.753 l
0.0599976 w
S
1.5 w
640.14 89.2526 m
(1.6)
[6.99 3.495 6.99 ] pdfxs
n
683.52 104.853 m
683.52 111.813 l
S
n
683.55 111.753 m
683.55 111.813 l
0.0599976 w
S
1.5 w
n
683.52 478.713 m
683.52 471.753 l
S
n
683.55 471.693 m
683.55 471.753 l
0.0599976 w
S
1.5 w
674.76 89.2526 m
(1.7)
[6.99 3.495 6.99 ] pdfxs
n
718.14 104.853 m
718.14 111.813 l
S
n
718.17 111.753 m
718.17 111.813 l
0.0599365 w
S
1.5 w
n
718.14 478.713 m
718.14 471.753 l
S
n
718.17 471.693 m
718.17 471.753 l
0.0599365 w
S
1.5 w
709.38 89.2526 m
(1.8)
[6.99 3.495 6.99 ] pdfxs
n
752.76 104.853 m
752.76 111.813 l
S
n
752.79 111.753 m
752.79 111.813 l
0.0599365 w
S
1.5 w
n
752.76 478.713 m
752.76 471.753 l
S
n
752.79 471.693 m
752.79 471.753 l
0.0599365 w
S
1.5 w
744.0 89.2526 m
(1.9)
[6.99 3.495 6.99 ] pdfxs
n
787.44 104.853 m
787.44 111.813 l
S
n
787.47 111.753 m
787.47 111.813 l
0.0600586 w
S
1.5 w
n
787.44 478.713 m
787.44 471.753 l
S
n
787.47 471.693 m
787.47 471.753 l
0.0600586 w
S
1.5 w
783.96 89.2526 m
(2) show
n
94.8 104.853 m
101.7 104.853 l
S
n
101.73 104.793 m
101.73 104.853 l
0.0599976 w
S
1.5 w
n
787.44 104.853 m
780.48 104.853 l
S
n
780.51 104.793 m
780.51 104.853 l
0.0599976 w
S
1.5 w
84.9 99.7526 m
(0) show
n
94.8 162.393 m
101.7 162.393 l
S
n
101.73 162.333 m
101.73 162.393 l
0.0599976 w
S
1.5 w
n
787.44 162.393 m
780.48 162.393 l
S
n
780.51 162.333 m
780.51 162.393 l
0.0599976 w
S
1.5 w
74.4 157.293 m
(0.4)
[6.99 3.495 6.99 ] pdfxs
n
94.8 219.873 m
101.7 219.873 l
S
n
101.73 219.813 m
101.73 219.873 l
0.0599976 w
S
1.5 w
n
787.44 219.873 m
780.48 219.873 l
S
n
780.51 219.813 m
780.51 219.873 l
0.0599976 w
S
1.5 w
74.4 214.773 m
(0.8)
[6.99 3.495 6.99 ] pdfxs
n
94.8 277.413 m
101.7 277.413 l
S
n
101.73 277.353 m
101.73 277.413 l
0.0599976 w
S
1.5 w
n
787.44 277.413 m
780.48 277.413 l
S
n
780.51 277.353 m
780.51 277.413 l
0.0599976 w
S
1.5 w
74.4 272.313 m
(1.2)
[6.99 3.495 6.99 ] pdfxs
n
94.8 334.893 m
101.7 334.893 l
S
n
101.73 334.833 m
101.73 334.893 l
0.0599976 w
S
1.5 w
n
787.44 334.893 m
780.48 334.893 l
S
n
780.51 334.833 m
780.51 334.893 l
0.0599976 w
S
1.5 w
74.4 329.793 m
(1.6)
[6.99 3.495 6.99 ] pdfxs
n
94.8 392.433 m
101.7 392.433 l
S
n
101.73 392.373 m
101.73 392.433 l
0.0599976 w
S
1.5 w
n
787.44 392.433 m
780.48 392.433 l
S
n
780.51 392.373 m
780.51 392.433 l
0.0599976 w
S
1.5 w
84.9 387.333 m
(2) show
n
94.8 449.913 m
101.7 449.913 l
S
n
101.73 449.853 m
101.73 449.913 l
0.0599976 w
S
1.5 w
n
787.44 449.913 m
780.48 449.913 l
S
n
780.51 449.853 m
780.51 449.913 l
0.0599976 w
S
1.5 w
74.4 444.813 m
(2.4)
[6.99 3.495 6.99 ] pdfxs
n
94.8 478.653 m
787.44 478.653 l
S
n
787.47 478.593 m
787.47 478.653 l
0.0600586 w
S
1.5 w
n
94.8 104.853 m
787.44 104.853 l
S
n
787.47 104.793 m
787.47 104.853 l
0.0600586 w
S
1.5 w
n
787.44 104.853 m
787.44 478.653 l
S
n
787.47 478.593 m
787.47 478.653 l
0.0600586 w
S
1.5 w
n
94.8 104.853 m
94.8 478.653 l
S
n
94.83 478.593 m
94.83 478.653 l
0.0599976 w
S
1.5 w
q
n
94.8 367.353 440.94 80.4 re
W
n
1.98 w
n
94.8 424.233 m
129.623 437.252 164.96 444.901 202.14 446.433 c
239.565 447.877 276.417 443.339 312.96 435.513 c
388.499 419.111 461.198 392.279 534.6 368.493 c
S
Q
q
n
533.52 294.213 253.98 75.36 re
W
n
1.98 w
n
534.6 368.493 m
618.072 340.963 701.942 315.862 787.44 295.353 c
S
Q
0 j
0.638 w
1.0 M
264.9 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
1117 <001C60D8A8C9B5EE31034A5B39E4F96C9988E2EBBD55C4FDFB27EA0C42
DF0C314FF3EFA380EF0332EFEC3D0EE173993F83BA05D28D88ACBF2487397E00
DD8C4D9F3692F17AFF4F013DCDAC5133BBE37B59797310002A6DFFC7E281632E
B5875C3B0D26EBB1C2115D56471FD3BA2741999ADE357AE99F7608750322AD88
3B26FE77B1F2CB7C41> |
!
end
end end
%ADOEndSubsetFont
/N17 15.96 Tf
(\004]) show
n
264.9 72.2126 m
(\004]) pdf_strokepath
280.921 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
19492 <001C60D8A8C9B5EE31022ACC8A40772039B635EB53085DE5A206756EB
56363E2BB5817E71FC65F505377D53101CB43EFF53BC7122F10C1491C26D6935
B2E50FF9D8B7C318246679C7167B26D12B2C6C71B6141DB588518C89FFBF8C2F
839FD737DC7EF47B54E7C179D10AD796204D56112FB7D8DD16C99431522354D6
1F1760CE6EA2F8A29FEEA6F51B0B84B11D060EF44C73F581F95A0637E0DFF943
BAE4E1F007709BCBD41E40DAEF44291226EAF96069BD3F2C3B3CA6CA0D678FF1
6F5499F8FD8EA62DA6AFECA1D503EF90EC2D7EC91313AFFF52E9A46437B356B3
29D6F6C5DEAF3BD85E90A114343E9E2DF05> |
!
end
end end
%ADOEndSubsetFont
(L$) show
n
280.921 72.2126 m
(L$) pdf_strokepath
296.941 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
16091 <001C60D8A8C9B5EE3103F6ACE8A6DD5E17B894F034F417BE5BEBA05A4
24AA70629BC52CB5D0BDAB7050F91D096BE5D9FEFF9F483988D5A24BB923F169
B8696D909489E9BD0493F5722C99B7847D93070EBAC7E2C6F75497FAC65F8D0D
4E48D8F004C1A27871E40EA063245FE4ABDDB61ED8885239CC7CFEBAFCC51000
B072F2CBC649C9F2F1CFA1703581620919C46BC788177A3BEED9533888928CA7
02316C21BFC5BC9B4867B7AF1CB30D47603E33229750713D9E4C3589A0F8C52B
C70D9944081826296EE6DB1B52FC1C2E0B2F3229189086A3135455D9997112EF
DA32905E252E4B38EF147754EB662D5D578A034F073F53BFF14834D0774FA97C
37C7617A31191702074637A5B44AB716C18649584D94839DBCD8783BA2F2F624
10DBAB439D13A0DA54AF20D458E8FCF671E1F45EE17369F902FD53DBC4BA847D
E443147DD98A4BA884C0A76BD74F27910C94D16D31D27B57EF857E68C98B7D4A
87F5CE674E2F327C34FA85C256378A9C4184C70AF3AB7C6CE88F4988C> |
!
end
end end
%ADOEndSubsetFont
(>\333) show
n
296.941 72.2126 m
(>\333) pdf_strokepath
312.962 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
2264 <001C60D8A8C9B5EE310304C98BC5A3514A173B61D330E1435890A97EC7
FEF663C5002E95E0FD21965DBE85CDFCF7AD3DD895D716DECDE99B80E93EADD9
33FCE41CC9B91181CC7223DA1976DCA41AF2F8E8FC2D50C810DF793EDF2EDFB2
6B3F51B23A50C7BD954733C10D42065F48406E97CB0F2784ECF1DD8BACDA47A6
6A6FC09102B8913B198A30475681F6CF7C217BD4EB78C050180642AB078B55F1
04CEE530CEAC90D6A636D2DAD400968AB13838614090D9414D5F153DFF5F4AAF
F4A8ECD79029044634DDA95C168DA8D50F8F6888757DF72AC25F2641ED37C3CC
727A20F8CDAB214594AD1496434AF77B274A12C2DD85144939FC26986AD221F4
CF52831565180971BCEDB1D6B81C28B5C19DD7525A3B33E61D80ACBD> |
!
end
end end
%ADOEndSubsetFont
(\b\330) show
n
312.962 72.2126 m
(\b\330) pdf_strokepath
328.983 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
13571 <001C60D8A8C9B5EE31021BDB61D6B8606F0DE405C36E945A5FA8D7978
668D879BA866DC1F7FCB0767EE69E087E6E4862743FEA9EF12D26B66175BF4A6
8460F65913558FB6D3F1C9FB3E202BB3CE31A07E25DEDF1C77732C78BB5EE630
B0E2304DB92856369D6BF2B71EA4794EAEC4D1A07A2F4012588D5F64C86D1C32
C33B0D15AD73BF5105485F79FE36ADBA294656CE4C91CA42B02CFD83395EB45E
90AF230F12F102408118F027FB9FE9521BF219DC15EE814663110851B467DC97
82673D7AEE1CF23C374F22715ECA6D8245D56A1CB5CA0A9E343F00C6D48E7804
6A929AF8C9691FDE3AC421F14F5CB204AAABD3FA6DE32D53888A8031CD7858C7
8E18D4B7E26499041A9DEB138AF875BBAB1565FD8B13BFC956CB58A4631BBC1A
3C62EA362294A940E8FA450DD180852> |
!
end
end end
%ADOEndSubsetFont
(5\003) show
n
328.983 72.2126 m
(5\003) pdf_strokepath
345.003 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
7604 <001C60D8A8C9B5EE310323C8B8CC3C2BBB169F822973A33BD6AD1AEB43
D5CE1B1572D4A2EB30A6DE2380C504A2A5871BD892F51F5CB47BC4CEA761C081
B2526901BE7D8A3529DCD8F1DCC2C19907994238926A5C584CE6F3E0C0DC79F2
EB23FFC2F00D17F74A2F243660F0DFB97663C57C3F64E7B46189129224536DBF
DE22864F0A641F19BEC67A467FAD6A77DAA394F2D7AE6D9028196E14B74398AD
ED048C53D4BA02003E25A5C1D46FDCF939151C36F2AB92B8AEE35341A461BE44
BF3BAD7C7EC45713B43DFCB66A6F097119B32B9D126C57C9190C30234AF1B92F
327EE3DD3241F82C8F90D108A4D355E35DE377FDA6B2C550263D1BF8A4203D41
AD380A2B0E2D59AFE85F40D81D0D3051480D053D49937319E18439C170521334
3DFFCA78D636365E068C49A17B4916F7AF5889DD9B71D13AFED83FB3A3CDE6F4
D071E15A22E94C1D653E610C1F7032> |
!
end
end end
%ADOEndSubsetFont
(\035\264) show
n
345.003 72.2126 m
(\035\264) pdf_strokepath
361.024 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
12003 <001C60D8A8C9B5EE3102B5A8B96F825A4D4B356AD3F3AEDE6F9C7702A
8E2C05980BF7AFC63BF146F90ED1FF8CAFFE36F61441D1EF5EA840CB8D74D4BD
7F42E6C9E65DC447D0A83AC9DBDFA2B6DC9AF5F78392E9E9DC97B906306CE7F1
2CA791ED280D585EB0C7D16BFA7DE3EB879728758A5E15EBDCA956C39032DB6F
332AA0876ECCC00AF6B8CFC178D0B6A1D47516731259FB7F9CA34F98B0622760
111505C838B3EE5B3B89FFE4BD9687305E6A47B184C2B7C0D72B882E7D7C09D4
7FE25E387A39531FD9058623680C0BDB8E3B0AC492A23C48981B69010978B230
A0E356001FF58A0802F3EC85D1B6AF13FA129B1A180C0A0A6C5B606043C6B1B9
38C60E5CE8AD80C26480107AE0571CCA943257B6471CA740F09D7E2D140BC9A5
4C1E1FFCD84BA92FF70BF4FCE73362251732DD399DFFA8A3808A8FFB534EE13C
B6BDE887E5F3DD834F800095AB239686369A25647894BC4FBE5F566AEA1EAEC8
0DF30D9C07D37EEBC2C4B99D69A0CBD18B0403D44C3F5995C4BFC843EE053EA8
CEBDA36B1C28A83103E6443F7557289944C8AB4D6CF067FA29BC172267A50461
2A5AB3E922E47F5EC030377AB> |
!
end
end end
%ADOEndSubsetFont
(.\343) show
n
361.024 72.2126 m
(.\343) pdf_strokepath
377.044 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
13524 <001C60D8A8C9B5EE3103CB5132C994F5FA27A7543306C3B61F2F04274
BF83556E155AA44984DAF63253C8828D3C5677A9F29CD82DF4285AA01A30B3BB
02B76D888159ACB4B41FC16118225D7E8228C89CE0BC286B8461C5B43F6094A4
4C16C07DCFF29703867BB410FBB8B43A6A7699181CA70D54EED85AF74C5537F2
A99DE5A0BEFFE848B38C14BF96F61F4B4A19C025CF0AEC78991056A0F516E00A
50269583FF8F5A02D074EB64DB35C5CB4E0F49E815ABE8AEFFEEF96DD4DB3089
45EA0216540BA7042B5B0B448750BF7B2C2E8E3E4789B33407DF5F6B52086DD3
E9DD28AACC6D3AB05DC6CF9DA9D2901B70FF1EBCA2128762E4EEA3546CCB8646
9C33D2AC4124061FF1212A567F0F98AAC0D> |
!
end
end end
%ADOEndSubsetFont
(4\324) show
n
377.044 72.2126 m
(4\324) pdf_strokepath
393.065 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
13604 <001C60D8A8C9B5EE31022230240D82F9E87DF6AF58C166BB635896E96
4E1761F4B58B7B98767009CF74E50FB9DD56C13702B6266C8EBDEC5204C14282
95406C51B2132B9F55BB27E206E4E64A23B04B9CAE9023F71E7C6D4E1D8B31EE
210FADB8794E881C97C85CFE01D10335C98B94BB2F98DDF9E6A130A5A0F605AB
D3F7407AD00C138884C5FC5EA86B55D661630880742A216956A9348DAF99F7D2
A636F62BA6CDE34935CF5F5D897FA6B12EBD456C80A753A171502EFAE75A984C
E9EE3230070D8DD4022550B74A4998D276A20BE65494F9D1B691ECAD51CA41E8
1F39EE6CB400334D74B3B12564F93C65EE2D4B864BD5F756D28C5128F6AE0449
2DCDCDE4560D1CD2262E6F7583E97C96860AC0F21AF4490F2072F7C7A99925F7
4540500E9BEACC27AB7F06ABFCE37DF1336C332A29F3CF7E98D666248BC331EE
F5304CBAAF83E57C6CA09216C74C56CB131A5B52EED0843E2DB649A0548D8F75
A5F133502> |
!
end
end end
%ADOEndSubsetFont
(5$) show
n
393.065 72.2126 m
(5$) pdf_strokepath
409.086 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
4722 <001C60D8A8C9B5EE310DF4479E8CCE34655876EEDBEC477294991D20B2
4A2F36A22568A29D985BBB3BF33131E3529F4E9E070BF5B824552C0DD88F80DB
5A3ACEA37495429472D40A2134EA78A31A140C24E60E98E341BC5A6A2E9BE38A
F1410A3E31B347BE6F809483D8B2286CAC79BACBB6D32027C8D262D97A120B47
82B470ED81A9D51E3F16BB0E2B515FED59075036868A3D8AD02D902B81452AE8
3FCA13893316F72E3D6F0B2E32AE72F807EBB2BBEA8DCE3B619FF68A1E640146
B9E477D8E0178E4EBC95B9B3EFB7DC70205645D56A9223539170D980F8FFD28A
57C4AA5ACA5B3C13DD918E54113199BC99C9680656A0B5CE7EAB1550715494D8
E13606B8CE1A584E64A54937A4C6B0> |
!
end
end end
%ADOEndSubsetFont
(\022r) show
n
409.086 72.2126 m
(\022r) pdf_strokepath
425.106 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
1086 <001C60D8A8C9B5EE3113116629BD2EFE642A31A4FDEFB278DC6CC663AF
29336642ACE723DDC28E6DA9E50F2B3DFD62F7CE0BA67102F0982143C3B055D2
4DE5B9CD9157D096993986DB7F37903EF534D282152CA2D1D851883FE8116F3B
2FD6BEE962711F18F6A2B76A8018CFEF24C75687B48A0854765C5162D6697C2E
66E3EE98DF484A5A22AACE7C9CC5DFEA7F50FDCB294921F7ACCF7E7C326FCB87> |
!
end
end end
%ADOEndSubsetFont
(\004>) show
n
425.106 72.2126 m
(\004>) pdf_strokepath
441.127 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
2491 <001C60D8A8C9B5EE310DD7AAED367833C1CFD284F0F2D8856F0D2030B6
DD5BD551E954B14A8A77B8B98A757DFC1CE45CC14EC53B2FB36869350E5B376D
88E53D437725031011B651CCB952DB974EE587BD833846961903CEB529B43E03
67347558D0EAC0BD010023F6491B2EC7D4555D23833A23C15EB93F4792300E63
8C77A33B0EE9E570721B4A1B7A3A9B407EC6CB371FBCE778A1F71AD01AB2099D
E9F0B3CB5C4260023AE462F651DD1108A609E4738A3EDFBE316E40D5263DED86
55> |
!
end
end end
%ADOEndSubsetFont
(\t\273) show
n
441.127 72.2126 m
(\t\273) pdf_strokepath
457.148 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
11109 <001C60D8A8C9B5EE310D6090A1E1ECE3E2608EAA59B248C92BB1FB414
EDF1F9EE3CC9BAD18FC0B3024BBD37148C88BC4F55A518BFADE08E38F5736599
789F762886726E4646E32697223B3782C09BAE9F9C0CBF554D7DEA81796865A6
28DEA6F6FF529C3D9848CCCB78F4937FD0D2FB3CE0840E311097A6A22256747B
475525A665B89FD614DE6CA1CCFECD4FF7B142933D117917286D6DC153965D17
5D1242931E51412FE8F4C7A2DFCC73FBE304FD45C3B32A9AF47291E3A011470D
F05E585838077156EB71DADB01E1672> |
!
end
end end
%ADOEndSubsetFont
(+e) show
n
457.148 72.2126 m
(+e) pdf_strokepath
473.168 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
19622 <001C60D8A8C9B5EE310D78348A8E2D7835360962F27472A6D7BB8EFAA
4361AC3D6EBBC90732F26560D90B11B26A8A6311DDC21F820316DC10A0449A2A
64A39579B3AB2B5E56CDB7DEACAF5207899C2C32B7E60BBB72276D1D4F18F87D
3568578D095507DAC89150327FD4CC7B7783CBA9FAB89FB1860E47F15B1C5A5B
CE1B3BBDBCAECB373256042FDA5B53E323761989AFCAA3DE9369BD56ACA55C01
0565B47397AE2EA8BA6D4F17BBF6B21E9F51BA891683718846D861EC6BAF9C0A
AB4B0E7F13B386AF470FCDE1D5C5D835E207416D05EBF9732D6C30993F670BBF
E8103EFEBE26C5145D7FA1FD26EE3C0ED75D4CD50C9EEEB084A50C923AC25C20
94137A797B0C6616A487C44A7613E48E1FF9A16131FD540AABB15FFC536EDE0E
E65E9D83103B3C2B67B8A24C5A8BC590C9A39949C7C4E8BEF29B35959F89D110
AED6E6F3C24891787834F5E222104CCD0E265A5D7AC905DB5E7044E3D2571F56
71E27EBA32F2AD7A3B3CEB4D5E0C93107033AAEFE4CA76775E7EC656D7E7406E
2451DC15AED9E5430> |
!
end
end end
%ADOEndSubsetFont
(L\246) show
n
473.168 72.2126 m
(L\246) pdf_strokepath
489.189 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
11047 <001C60D8A8C9B5EE310D1644CC280454DCEFAC68DF3D8EF44FDCC9D51
6E2A94B84B83B423862E87CC33BF18DF3C6358898D345D46B71C69B4A97232CD
8528029F34C99ED16AEFDCB6DE21361DF5ACF8EF5CE197AC8893962C89CEF533
494EBEFECB306D4039EE73758559EE0CD180D2C9EA90600AE9B3C23148B17C18
91570C87866D0E7D00CDB619B6677CDA2627214A57E267F48D7DDEAD0EB9BB61
76C966CD51F4875779FAA3DA13054BA00D51952C0DE32EB73FFE500EBE94350A
565157E31C9BA98E54F7B200224545191D256A86C7256A4B77F3C91F1E65469E
8FCDFE4A86448C641310E9FB7C3D79DE301767C21B590864871AE2F0AC7801CC
E93D939BCC2DF441479323D1CB395529573FF46AE27ED93A15FF5907AC67FA6F
07B5AF6D1F648015C89F436E8917D4E56CC21F1626731F95C7C83CE7241384AC
F364CB5AB078C0C4DE796DA1B1D9759EEBD92C8DC527D5F7FE97C149494D1435
FF43597C29AE0DA1254EE904A07C3B1E6BC4760E3D69BAE34AB128D0AA528ABB
18AC2F5F750BD779D26B6E13EEEA4CE4B2E088DCD973E6A614685D3C6891B9AB
DA580869C431A137597F9FD267D36BD0A1833944ED095> |
!
end
end end
%ADOEndSubsetFont
(+') show
n
489.189 72.2126 m
(+') pdf_strokepath
505.21 72.2126 m
(\022r) show
n
505.21 72.2126 m
(\022r) pdf_strokepath
521.23 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
11444 <001C60D8A8C9B5EE31023EA36A9FB9EFFD002A9633CA6905B9E0734B1
1E4E52251A0326518C1C981FE8C63A8F3DC4516C02BA51ACC50BA5493354F1DF
F0C24C89FD7AC2761BAA5B6E961F23A04C33C41ABCA793F439CB326241CBB7E2
D21A3DAAEC97999FF2B6B57992D6F610EC8E6CC1F8E5A049C3C988F648FADE33
2B67F933C49B6EDAFB049385022C67B87E016A3CF2DDFA887B7CB78999213827
C4E7201517BEDBD7F6F673AF05514295AC93B339E03F5039C4D90AF9A58E458A
E7375CFE482023AB71FE3DD9A4E735E460555322F0A291FED2E7E6241F302202
2E7690252931623BA8EF10ADA8633684AC3DAB8884CE84BED614E1A63D44FF85
1982F440FA12D2A72> |
!
end
end end
%ADOEndSubsetFont
(,\264) show
n
521.23 72.2126 m
(,\264) pdf_strokepath
537.251 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
2506 <001C60D8A8C9B5EE310D71E91198DCD808D50A4C4A4C82698B1094A738
F30136F533A2DC49159C365403A2C111458985234D8319FC72F85BF325808A4D
0B89A211C46F5C2D5EF974EB31FB12960A6CD2C78689917D9B7BAFE50B137B13
29A52A51E40A50D785269343A8F33F99DF054E3D66F5C53870F4CE7B3DDEFF94
219FFC9EE2778C64F4D002A8CB60A8719E1ACB628D4167EFB95EF58644BFB675
BA64306257433B2875AB2AB510E188E6337C130971FF7DBC80B582DD08768A96
0F3B07783223FD445FD8DF573BF69FEDAA09EC9A054105EDDC126ED0532B7B65
B7448AC67B7DD4C4118C7BA223F6FFCA22B7CE85BBCCC1733FDDD68CD9EC6C2C
A9853E067CB6DED3E6A5A0E9254466BFA572C99E08> |
!
end
end end
%ADOEndSubsetFont
(\t\312) show
n
537.251 72.2126 m
(\t\312) pdf_strokepath
553.271 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
5334 <001C60D8A8C9B5EE310268CE62E9B886ADA942ABA557840AABD5341DDE
E71DC91052C9A2753B44C08621823F0655B2C68305D403E591A2148B0754B0E7
CA2FA127FE686100867ED9DE5CBE38245ED95C24A2C448EF3E4EA611C3B67226
270F3D27FA0149FFC3B000511E71D20916A0E2C0390ABA4A46888911870593D6
8530751E5AA4A8FCF10C339AC2AEFA3E124620C1D7947C4C1982E9AE66767C55
2C87816128F82A8DB811A4F7F600A4859918E74326F38B58739799A971C6A7E1
ABF03EDD9EB76182810B351D2072E32C995C42664959C2C2064064357E187AE8
DFAC9F006830BFC115F53B1B758B3CB9D3670E44C88153CAEFF93CACAE422C88
57B4D9BE340B574D0C24C6F8C393D05B18067F9CB1D03B5BDDD913747A05808C
65524C69DEC64E3E1A63B3E605B24C344087606DCE2F88D84ADCEFAD59> |
!
end
end end
%ADOEndSubsetFont
(\024\326) show
n
553.271 72.2126 m
(\024\326) pdf_strokepath
569.292 72.2126 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
8708 <001C60D8A8C9B5EE310D3784F978A6DBF1E5548E6C793EB5EEBED114CD
A92EE72DEEC16402312B16AD73B6CFF1AD7A8AEED1E1C4860BED60788DB8D138
E0AD36C7A4E9CE10FCFE3FF096C0994FAB647D92856212150BAC637B2948F7CE
3C9B8E7A612F40DE7B3E4B7DF5B5BA2A5D093C4350F5581279E58A793C8C6371
2A01720B762ABAC0EE484AB22622595DCF11DA9FF2E6A8AD01618FFF787994FD
064951CA623130188A7554027CC3263A1ABE383B5FF186F713A56555048D22> |
!
end
end end
%ADOEndSubsetFont
("\004) show
n
569.292 72.2126 m
("\004) pdf_strokepath
585.3 72.2126 m
/N12 15.96 Tf
( \( )
[4.02032 5.34169 4.02032 ] pdfxs
598.679 72.2126 m
/N18 15.96 Tf
(t) show
603.12 64.2326 m
/N18 12.0 Tf
(r) show
611.82 72.2126 m
/N19 15.96 Tf
(\)) show
59.28 220.413 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
14125 <001C60D8A8C9B5EE310D43FF6757150EB88B59441CB3B1A1F4183BF51
66BC21B6BB2AA30E5D6C0A5BEE9F2C62A9D4E0C9CC6A4AE1E41287BCEFFE8E94
EFA153D5E8185EA6F54529C8D59E1E55AC0D16B0219E1F014F9872230BE35DB0
7FF60B893BC46597ECC8F8D10CA1D2BFB9565680EA91E9D423FCF3F52BF3169B
69FD90E41E93B1FE63EC38C4F91242489057F8A2700CA52A721D32FEE4F592FB
31CA51E4B4E56AA65C378686BA6149A62E2CCE8E28CEF50205A722245C091182
65FBBAA4B3C99D6945C02FBC0658DCD11E21E85007916F1850D22954C639B0EF
71E576EA282B6E891A4AD90EC76D866B131EB6FD92DFAFB367DEB1E2A084AA73
BAD67F0CF5035A3602A635D85202EAB877DC8BE62471AF69F0541363F19A56CB
C2D3EE5CD72526B84C3D823E78E67B280C816E35354B8F06608DA428150BA884
3E9CAB916C56C89790422E0B14E1DF17A974B79E15336EE942893E3971BB3775
4889FE70E6010DBC46AC5ED0F5D099AA8F9D8B423C5F043D0B57AB0F2BD1BE4C
038B5A0AF7291322817376FC07FB981EA05F4A2DA267D0215A6046E944CE311B
2E5130F21> |
!
end
end end
%ADOEndSubsetFont
/N17 [0.0 15.96 -15.96 0.0 0.0 0.0] Tf
(7-) show
n
59.28 220.413 m
(7-) pdf_strokepath
59.28 236.433 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
18431 <001C60D8A8C9B5EE31025C74B0D5FCB185BB18CF829F32D3C7568CCE2
0A02880D51DD5D883B57DDBD038DA04B492BBD57BC63F41D2B2608E993CC32E5
12ABDC46286C0B79B433387CEE344842678090D6881157430F0570241337E09A
59E3691A702DD3F61F815AEBC36E6856303F7E403DFECD265873A94AACF3729A
E890CD8EAE452944018156E1903BAC24610E7E1897C7570082E36867D3E0CD35
4614A9AC8CB3D99B70CD1F2FBB467D6122567D15AEB10DD977BB2FA4EEAAB47B
75B26BC6E6DE79C5D29EB6E5AF8DE52E2191AF2C5F4AD2A5E44F83805D077493
2F733D095453CFE7D2CAFF1E18A88671F724373F9E1073114F947AD621624477
C2AB1831916A32371F98C39FB629E4EEA241FC2> |
!
end
end end
%ADOEndSubsetFont
(G\377) show
n
59.28 236.433 m
(G\377) pdf_strokepath
59.28 252.454 m
%ADOBeginSubsetFont: WKFBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/WKFBAA+NSimSun 1 GetGlyphDirectory
4598 <001C60D8A8C9B5EE310D278B818B01166F05D5FB2464180A7ABDBFCEFC
04DB5A5DC8A3E6BF09F0E0CAC1B59EA42AC3399E52D61138253BB7869B796423
C3247EF87D9D5C0CD42C4084D0B0C9A28F07BF235C456F56AE8EC9B4F1110AF8
BC55A24043473BCA5BB64AE91843DAF2EC0093A9451B11EEACD7B540F629433D
79FDDEE7FF231E8A0C9F0806F8FFF148B01E9B7EF4FF505767D67D064D068480
1644F11F51FC5137DE1F1E8DA8298EB16789CB49D2FE88FB74C529703A448A51
A96810F513848B09CCD4A4EAE0D3BFA1A125D4F0438C74DFA9FAF182011C2649
D04726D22D8EC76F88FB47FA282172B539EE2B02D653A6FAC237B3E2A1482B85
C167AA14DEFC132B54959EA267F57EC332F682F33BA5D57D6CA4E818E2F68BA3
AA3CA619219AC6422100D1B4059B90F0E2BBBD6E530B8B8881DCE02B5588C77D
01B9E2BD0EE20CE9E4F60293ECC6DA166BFEA3A69EC9A2F1F8FF3E3192520639
28009C9EECAA27A7D64067E37D7B72C3FB1F7492A904CDCA0D1D32718EC86574
A8C53F4854FB4C65F045370324B33464BD4F80B678AA90508AC4DFD69EF56DDD
749B32635DD7BEF0ECED925C41FADB123CB77DEEB3A3E6472A87B1AA85> |
!
end
end end
%ADOEndSubsetFont
(\021\366) show
n
59.28 252.454 m
(\021\366) pdf_strokepath
59.28 268.475 m
(\024\326) show
n
59.28 268.475 m
(\024\326) pdf_strokepath
59.28 288.512 m
/N18 [0.0 15.96 -15.96 0.0 0.0 0.0] Tf
(ED)
[10.6199 11.4976 ] pdfys
67.26 310.653 m
/N18 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(m) show
59.28 320.013 m
/N18 [0.0 15.96 -15.96 0.0 0.0 0.0] Tf
( \(J/kg\))
[4.02032 5.32414 7.98958 4.44645 7.98958 7.98958 5.32414 ] pdfys
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font TimesNewRoman
%%+ font TimesNewRoman,BoldItalic
%%+ font TimesNewRoman,Bold
%%EOF
